openapi: 3.0.3
info:
  title: Account API
  description: API for managing bank accounts, currencies, and transactions
  version: 1.0.0
tags:
  - name: Accounts
  - name: Currencies
  - name: Transactions
paths:
  /accounts:
    get:
      summary: Get all accounts
      description: Retrieve a list of all bank accounts
      tags:
        - Accounts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Create a new account
      description: Create a new bank account
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /accounts/{accountId}:
    get:
      summary: Get an account
      description: Retrieve a specific bank account
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          description: ID of the account to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      summary: Update an account
      description: Update an existing bank account
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          description: ID of the account to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /currencies:
    get:
      summary: Get all currencies
      description: Retrieve a list of all supported currencies
      tags:
        - Currencies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'

  /transactions:
    get:
      summary: Get all transactions
      description: Retrieve a list of all transactions
      tags:
        - Transactions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Create a new transaction
      description: Create a new transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /transactions/{transactionId}:
    get:
      summary: Get a transaction
      description: Retrieve a specific transaction
      tags:
        - Transactions
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    put:
      summary: Update a transaction
      description: Update an existing transaction
      tags:
        - Transactions
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        balance:
          $ref: '#/components/schemas/AmountWithDate'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        currency:
          $ref: '#/components/schemas/Currency'
        type:
          type: string
          enum: [Bank, Cash, Mobile Money]

    Currency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string

    Amount:
      type: number
      format: float

    AmountWithDate:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        last_update:
          type: string
          format: date-time

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        date:
          type: string
          format: date-time
        type:
          type: string
          enum: [debit, credit]

    TransactionList:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
